/*
[编程题] 矩形重叠
时间限制：1秒

空间限制：32768K

平面内有n个矩形, 第i个矩形的左下角坐标为(x1[i], y1[i]), 右上角坐标为(x2[i], y2[i])。

如果两个或者多个矩形有公共区域则认为它们是相互重叠的(不考虑边界和角落)。

请你计算出平面内重叠矩形数量最多的地方,有多少个矩形相互重叠。


输入描述:
输入包括五行。
第一行包括一个整数n(2 <= n <= 50), 表示矩形的个数。
第二行包括n个整数x1[i](-10^9 <= x1[i] <= 10^9),表示左下角的横坐标。
第三行包括n个整数y1[i](-10^9 <= y1[i] <= 10^9),表示左下角的纵坐标。
第四行包括n个整数x2[i](-10^9 <= x2[i] <= 10^9),表示右上角的横坐标。
第五行包括n个整数y2[i](-10^9 <= y2[i] <= 10^9),表示右上角的纵坐标。


输出描述:
输出一个正整数, 表示最多的地方有多少个矩形相互重叠,如果矩形都不互相重叠,输出1。

输入例子1:
2
0 90
0 90
100 200
100 200

输出例子1:
2

例子说明1:
*/


#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <fstream>
#include <cassert>
#include <list>
#include <queue>
#include <limits>
#include <unordered_set>
#include <sstream>
#include <map>
#include <iterator>
#include <set>
#include <stack>
#include <deque>
#include <functional>
#include <cstdlib>
#include <ctime>
#include <numeric>
#include <unordered_map>
#include <climits>

using namespace std;

const int maxn = 55;

struct Rec {
	int x1;
	int y1;
	int x2;
	int y2;
	int w;
	int h;
};

Rec recs[maxn];
int n;

bool cmp(const Rec &rec1, const Rec &rec2)
{
	if (rec1.x1 == rec2.x1)
		return rec1.y1 < rec2.y1;
	return rec1.x1 < rec2.x1;
}

int main()
{
	//freopen("input.txt", "r", stdin);
	scanf("%d", &n);
	
	for (int i = 0; i < n; ++i)
		scanf("%d", &recs[i].x1);
	for (int i = 0; i < n; ++i)
		scanf("%d", &recs[i].y1);
	for (int i = 0; i < n; ++i)
		scanf("%d", &recs[i].x2);
	for (int i = 0; i < n; ++i)
		scanf("%d", &recs[i].y2);

	for (int i = 0; i < n; ++i) {
		int w = abs(recs[i].x1 - recs[i].x2);
		int h = abs(recs[i].y1 - recs[i].y2);
		recs[i].w = w;
		recs[i].h = h;
	}

	//sort(recs, recs + n, cmp);
	int maxNum = INT_MIN;
	for (int i = 0; i < n; ++i) {
		int cnt = 0;
		for (int j = i + 1; j < n; ++j) {
			if ((abs(recs[i].x2 - recs[j].x2) < recs[j].w
				&& abs(recs[i].y2 - recs[j].y2) < recs[j].h)
				|| (abs(recs[i].x1 - recs[j].x1) < recs[i].w)
				&& abs(recs[i].y1 - recs[j].y1) < recs[j].h)
				++cnt;
		}
		maxNum = max(maxNum, cnt);
	}
	printf("%d\n", maxNum + 1);
	return 0;
}

/*
您的代码已保存
答案错误:您提交的程序没有通过所有的测试用例
case通过率为40.00%


测试用例:
50 -328069945 67735397 -892657562 -165093050 -559275388 -754006395 325974984 -898364644 -710373715 -959457054 -823050212 -995343144 150393485 -630354810 430905060 -105617510 -624691677 664751278 -609652457 -940422577 -958960106 -826326849 -963375152 -662564893 -873545164 -91341767 -535632001 -121910469 -781317967 339852755 -497618250 -607536380 -998103775 -989417082 -892547865 -639154654 -820199079 -181568237 -889185128 -908386930 -358938084 -752694383 -857467590 534775584 -863558142 224891136 101678051 276831229 -470544526 -820128548 -350274026 -996980611 -941674927 -255473028 -463063318 -998552961 -808644220 -777764638 -209432447 -984137971 -946018977 -592229837 -603942000 -952804175 -573517413 -482002812 -44426697 -962960212 -771257730 14448147 -890718701 -512811576 -40885917 -873643171 -573285127 -929047098 -181865568 -382045777 -733028326 -898417630 -898617272 -606812936 -957158015 -938135465 -127684980 -136208193 -942458695 -739691970 -996143535 -831598725 493013037 -138975813 -927869131 -709507680 -895480314 -851611327 -972166957 -192050434 -826266975 -599903045 626787594 265814464 -81968524 -89838564 -473799417 -629415441 579574372 -784609853 -427529643 -955698432 -799102495 723751864 413113116 -255120871 706605866 -2662229 -502395907 755229439 964655389 -594051330 -794183709 -262632890 -959853203 -394799340 -715714555 25484417 -124000088 667315225 -484713675 476317446 -453151462 -521063907 -552453793 50727891 -620636125 -141324780 -500696520 926942829 393969068 -709485105 745173029 -308736087 -388870761 784568162 -839793503 941204212 222129769 428689682 -341523821 -445820498 34203574 -323760611 441336740 -232923285 794971943 -832458641 -788780545 -634463890 32643904 -717897733 -922174761 -466054021 -227095625 -935314788 -191191720 875118674 17911457 -696517456 562664317 940360753 -848481973 918876240 552601043 -224278454 209097324 -872114369 384070685 -300262213 -368726785 -648945978 676417 -338588825 -928408845 587681550 289170657 288848107 -941698662 -730701635 -689094993 569525757 871267177 856446216 -229151943 -538168170 -503038274 664970212 -924757549 995335976 -648102877 244745850 
对应输出应该为:
11 
你的输出为:
27
*/