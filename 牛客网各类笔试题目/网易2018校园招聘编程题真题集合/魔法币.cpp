/*
时间限制：1秒

空间限制：32768K

小易准备去魔法王国采购魔法神器,购买魔法神器需要使用魔法币,
但是小易现在一枚魔法币都没有,
但是小易有两台魔法机器可以通过投入x(x可以为0)个魔法币产生更多的魔法币。
魔法机器1:如果投入x个魔法币,魔法机器会将其变为2x+1个魔法币
魔法机器2:如果投入x个魔法币,魔法机器会将其变为2x+2个魔法币
小易采购魔法神器总共需要n个魔法币,
所以小易只能通过两台魔法机器产生恰好n个魔法币,
小易需要你帮他设计一个投入方案使他最后恰好拥有n个魔法币。
输入描述:
输入包括一行,包括一个正整数n(1 ≤ n ≤ 10^9),表示小易需要的魔法币数量。

输出描述:
输出一个字符串,每个字符表示该次小易选取投入的魔法机器。其中只包含字符'1'和'2'。

输入例子1:
10

输出例子1:
122
*/

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;


int main()
{
	unsigned int n;
	cin >> n;
	vector<char> vecChar;
	while (n) {
		if (n % 2 == 0) {
			vecChar.push_back('2');
			n = n / 2 - 1;
		}
		else {
			vecChar.push_back('1');
			n = (n - 1) / 2;
		}
	}
	for (int i = vecChar.size() - 1; i >= 0; --i)
		cout << vecChar[i];

	return 0;
}

/*
您的代码已保存
答案正确:恭喜！您提交的程序通过了所有的测试用例
*/