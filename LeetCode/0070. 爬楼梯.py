# https://leetcode-cn.com/problems/climbing-stairs/
# 70. 爬楼梯
# 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。

# 每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？

# 注意：给定 n 是一个正整数。

# 示例 1：

# 输入： 2
# 输出： 2
# 解释： 有两种方法可以爬到楼顶。
# 1.  1 阶 + 1 阶
# 2.  2 阶
# 示例 2：

# 输入： 3
# 输出： 3
# 解释： 有三种方法可以爬到楼顶。
# 1.  1 阶 + 1 阶 + 1 阶
# 2.  1 阶 + 2 阶
# 3.  2 阶 + 1 阶
# 通过次数211,525提交次数428,698


class Solution:
    def climbStairs(self, n):
        if n == 1:
            return 1
        if n == 2:
            return 2
        f1 = 1
        f2 = 2
        while n > 2:
            f1, f2 = f2, f1 + f2
            n -= 1
        return f2

# 执行结果：
# 通过
# 显示详情
# 执行用时 :
# 36 ms
# , 在所有 Python3 提交中击败了
# 83.07%
# 的用户
# 内存消耗 :
# 13.8 MB
# , 在所有 Python3 提交中击败了
# 20.59%
# 的用户
# 炫耀一下:

# 写题解，