/*
题目2 : 洗牌
时间限制:20000ms
单点时限:1000ms
内存限制:256MB
描述
你有一副扑克牌，里面一共有2n张牌，从上往下第 i 张牌上的数为ai.

现在定义对一副牌堆洗牌是这样的过程：

1.如果这副牌只有2张牌，交换这两张牌的顺序。

2.否则，假设这副牌有2k张牌，把牌分成上下两部分，每部分的牌的数量都是2k-1，然后分别对这两部分洗一次牌。之后把本来在下面的那部分放到本来在上面那部分的上面。

现在小 C 想知道，对一副牌洗t次后，这副牌会变成什么样。

输入
第一行两个正整数n,t

第二行2n个整数，第i个整数表示ai

2 ≤ n ≤ 10, 1 ≤ t ≤ 109, 1 ≤ ai ≤ 109

输出
输出2n行，第i行一个整数，表示洗了t次牌后从上往下第 i 张牌上的数。

样例输入
2 1
2 4 1 5
样例输出
5
1
4
2
*/

#include <bits/stdc++.h>

using namespace std;

const int maxn = 100005;
int a[maxn];


int main()
{
    int n,t;
    scanf("%d%d",&n,&t);
    for(int i=0;i<(1<<n);i++)
    {
        scanf("%d",a+i);
    }
    if(t&1){
        for(int i=(1<<n)-1;i>=0;i--)
            printf("%d\n",a[i]);
    }
    else{
        for(int i=0;i<(1<<n);i++)
            printf("%d\n",a[i]);
    }
    return 0;
}
